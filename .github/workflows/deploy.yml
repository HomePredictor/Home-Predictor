name: Java CI with Gradle

on:
  push:
    branches: [ "develop", "main" ]

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: homepredictor-codedeploy-bucket
  AWS_CODE_DEPLOY_APPLICATION: homepredictor-cicd
  AWS_CODE_DEPLOY_GROUP: homepredictor-cicd-group

jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-latest

    # Task의 sequence를 명시한다.
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    # gradle caching - 빌드 시간 향상
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    ## create application-database.yml
    - name: make application-database.yml
      run: |
        mkdir ./src/main/resources
        touch ./src/main/resources/application-database.yml
        
         # GitHub-Actions 에서 설정한 값을 application.yml 파일에 쓰기
        echo "${{ secrets.DATABASE }}" >> ./src/main/resources/application.yml
        cat ./src/main/resources/application.yml
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew clean build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}

    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} \
          --ignore-hidden-files \
          --s3-location s3://$AWS_S3_BUCKET/$GITHUB_SHA.zip --source .

    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} \
          --s3-location bucket=$AWS_S3_BUCKET,key=$GITHUB_SHA.zip,bundleType=zip
